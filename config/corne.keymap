/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define ALPHA 0
#define NUMSYM 1
#define NAV 2
#define MEDIA 3
#define FUNC 4

&mt {
    tapping-term-ms = <400>;
};

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
                bindings = <
   &kp SQT	&kp COMMA	&kp PERIOD	&kp P			&mt LCTRL Y		&lt FUNC F			&lt NUMSYM G	&mt RCTRL C	&kp R			&kp L		&kp SLASH	    &kp BACKSLASH
   &kp A    &kp O       &mt LALT E  &mt LSHIFT U    &mt LGUI I 		&lt NAV D   		&lt MEDIA H 	&mt RGUI T  &mt RSHIFT N	&mt RALT S  &kp MINUS	    &kp EQUAL
   &kp F20 	&kp SEMI 	&kp Q 		&kp J 			&kp K 			&lt NUMSYM X   		&kp B 			&kp M  		&kp W 			&kp V 		&kp Z 		    &kp ENTER
                  					&kp GRAVE 		&kp TAB 		&kp BSPC   			&kp SPACE 		&to NUMSYM 	&kp DEL
                >;
                };
				
                layer_one {
                bindings = <
   &kp EXCL &kp AT 		&kp HASH 	&kp DOLLAR 		&kp PERCENT 	&kp CARET    		&trans   		&kp KP_N7   &kp KP_N8 		&kp KP_N9	&kp KP_PLUS		&kp KP_MINUS 
   &kp AMPS &kp STAR 	&kp LPAR 	&kp RPAR 		&kp LBRC 		&kp RBRC        	&kp KP_DOT 		&kp KP_N4 	&kp KP_N5 		&kp KP_N6 	&kp KP_MULTIPLY &kp KP_DIVIDE
   &none  	&none  		&kp LBKT  	&kp RBKT  		&none 			&trans              &kp KP_N0   	&kp KP_N1   &KP_N2 			&kp KP_N3   &kp KP_EQUAL	&trans
                          	        &none           &to ALPHA       &kp BSPC            &kp SPACE       &to NAV     &trans
                        >;
                };
                layer_two {
                 bindings = <
   &none    &none       &none       &none           &none           &none               &none           &none       &kp UP          &none       &none           &none
   &none    &none       &kp LALT    &kp LSHIFT      &kp LGUI        &trans              &none           &kp LEFT    &kp DOWN        &kp RIGHT   &none           &none
   &none    &none       &none       &none           &none           &none               &none           &kp K_CUT   &kp K_COPY      &kp K_PASTE &none           &none
                    	            &none           &to ALPHA       &kp BSPC            &kp SPACE       &to MEDIA   &trans
                        >;
                };
                layer_three {
                bindings = <
   &kp K_PREV   &kp K_PP    &kp K_NEXT      &none   &none   &kp ESC         &none       &none       &none   &none   &none   &none
   &kp K_VOL_DN &kp K_MUTE  &kp K_VOL_UP    &none   &none   &none           &trans      &none       &none   &none   &none   &none
   &none        &none       &none           &none   &none   &none           &none       &none       &none   &none   &none   &none
                    	    &none           &to ALPHA       &kp BSPC        &kp SPACE   &to FUNC    &trans
                        >;
                };
                layer_four {
                bindings = <
   &none &none &none &none &none &trans     &none &kp F7 &kp F8 &kp F9 &kp F10 &kp F12
   &none &none &none &none &none &none      &none &kp F4 &kp F5 &kp F6 &kp F11 &kp F13
   &none &none &none &none &none &none      &none &kp F1 &kp F2 &kp F3 &kp F14 &kp F15
               &none &to ALPHA   &kp BSPC   &kp SPACE   &none    &trans
                        >;
                };
        };
};
